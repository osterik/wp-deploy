#!/bin/bash
set -eu

## Dump a wordpress db automatically, obtain credentials from wp-config.php
## if DB_TABLE environment variable set = dump only this table
## Used in maintaining a development and production environment for Wordpress
## deployments
## Author Andy O'Neill <oneill@energyhub.net>

if [ ! -e wp-config.php ]; then
    echo "wp-config.php not found"
    echo "Run from your wordpress directory"
    echo "Usage dumpdb"
    exit 1
fi
# Get the parameters of the db to dump from wp_config.php
DB_NAME=$(      grep DB_NAME        wp-config.php  | awk -F "'" '{print $4}')
DB_USER=$(      grep DB_USER        wp-config.php  | awk -F "'" '{print $4}')
DB_PASSWORD=$(  grep DB_PASSWORD    wp-config.php  | awk -F "'" '{print $4}')
DB_HOST=$(      grep DB_HOST        wp-config.php  | awk -F "'" '{print $4}' |  awk -F ":" '{print $1}' )
DB_PORT=$(      grep DB_HOST        wp-config.php  | awk -F "'" '{print $4}' |  awk -F ":" '{print $2}' )
echo "DB_NAME=[$DB_NAME]"
echo "DB_USER=[$DB_USER]"
echo "DB_PASSWORD=[$DB_PASSWORD]"
echo "DB_HOST=[$DB_HOST]"
echo "DB_PORT=[$DB_PORT]"
#TODO add check for port presence

mkdir -p db
#if DB_TABLE set => dump only this table
DB_TABLE=${DB_TABLE:-all}
if [[ "$DB_TABLE" == "all" ]]; then
    DUMP_FILE=db/dump.sql
    echo "Dumping $DB_NAME to $DUMP_FILE"
    mysqldump --opt -u"$DB_USER" -p"$DB_PASSWORD" --host "$DB_HOST" --port "$DB_PORT" --databases "$DB_NAME" > "$DUMP_FILE"
    echo "Dumped $DB_NAME to $DUMP_FILE successfully"
else
    echo "DB_TABLE=[$DB_TABLE]"
    DUMP_FILE=db/dump-$DB_TABLE.sql
    echo "Dumping $DB_NAME.$DB_TABLE to $DUMP_FILE"
    mysqldump --opt -u"$DB_USER" -p"$DB_PASSWORD" --host "$DB_HOST" --port "$DB_PORT" "$DB_NAME" "$DB_TABLE" --extended-insert=FALSE > "$DUMP_FILE"
    echo "Dumped $DB_NAME.$DB_TABLE to $DUMP_FILE successfully"
fi
